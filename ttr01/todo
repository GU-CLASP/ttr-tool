Fix types.meet1 so that meetypes in music-eng.s_NP_VP reduce

Parse.tokenizeFunArg needs fixing to deal with assert(pred('Conductor'
'Dudamel')).  Why doesn't X(Y) work in music-dmoves.oz?

What is it that goes wrong when you add  ApplyRule to ures-abs.oz
(something with modules) - needed for toy1-swe.  Seems to be working Sun Jul  6 11:39:15 2008

  Or is it just a problem
with model,preds,btypes for bear-abs?  bear-eng works with
bear-abs-test but not bear-abs.


Negation

How to put merging of agr, features in general into ures-syntax.oz?
  what to do with "a fish swim"

  Need to implement unif in terms of dependency as in paper in
  ures-syntax.
  If you take simplifications away from EmbeddingFunConvert then
  errors seem to appear.
-> Use ExportSintype in SimplifyDep1 in order to simplify HFC cases
Why is 'swam' not getting singular in 'a fish swam' despite using
  NormalizeDep?
Should we be using both ExportSintype and NormalizeDep?
   Fix recursion in SimplifyDep? or EmbeddingFunConvert?
   'Rec' is not defined in type {IsOfType R 'Rec'} iff {IsOfType R rectype}       
	Count equality violations to rule out combining inconsistent
  edges.

  Do the changes to EmbeddingFunConvert (adding SimplifyOp and
  SimplifyMeet in addition to SimplifyDep) affect the working of other
  grammars?  Should we be doing any simplification here?

  Perhaps DisjointTypes1 (in types) should be extended for
  sintype(...) so that if both T1 and T2 are sintype then if {{Model
  T1.1} T1.2} and {{Model T2.1} T2.2} and T1.2 not = T2.2 i.e. any
  object in the model which are members of basic types are counted as
  distinct objects.

  real unification would involve dependent types rather than merges -
  note that the conflict in this example does not end up on "fish"
  which is singular from "a" although the NP and verb are required to
  be both sg and pl.

  should SimplifyOp and SimplifyMerge be built in?

more operators are covered in EmbeddingFunConvert than in EvalOp

implement InstantiateTypeInModel for dependent function types in order
to treat universal quantification

add dialogue - CreateDialogueInterface in parse.oz
    [[a] [child] [owns a donkey] [a man owns a donkey] [a man owns a donkey]]
fragment from Austinian Truth, Attitudes and Type Theory
mng
copredication and innovation
Models should use MemberR instead of Member
faster chart?
reorganize grammars into directories and create a module with path-names.

------------------------------------------------------------------------
Done

    interpret optype and merge in EmbeddingFunConvert - nned to define
    merge in EvalOp in Types.

fix betaconvert for case apply(apply(f a) b)

fix EmbeddingFunConvert for case with deptype and abspath - ok now?

errors in type test

problem with parsing phon input timing out(?) in AddLCRuleEdges?

debug NewChartFunctionalInput in parse - get it to work with id?

generation from id

LRDisSem in ures-semantics.oz

evaluating conj needs to ExtendPaths

DepType1 in types.oz: SubType1 check removed in path(...) case - why
is root rec(cat: d cnt: rectype(...)) when it should be rectype(...)?
Fixed by putting 
[] T = 'RecType'
	 choice
	    {RecType Obj}
	 [] {RecType1 Obj Env}
	 end
%	 {RecType1 Obj Env}
in Types.ofType1.  Is this the right solution?

debug discourse

handle unary rules Parse.addEdgeFunctionalInput conj case - abandoned
chart for FunArg input

fix bug which creates duplicates after adding in unary rules.

trytocombine longest edges in parse.oz - get working with discourse
rules - take code for dealing with unary rules away from discourse


make generation work with discourse - now only d edges produced so
conjunction doesn't work - fixed

check types test


expand minigram to include discourse


why are edges "a" and "donkey" not combining?  Need to enter both
preds and words in abstract and concrete models...


expand minigram to include indefinites 

expand minigram to include Swe

he likes it - currently Lexicon does not get instantiated...

can the result of SimplifyOp be used as input to instantiate flatten
etc.? Yes

can the result of SimplifyOp be used for resolution?

make procedure version of AtLeast? not used

how to check for gender consistency

he likes it - implement resolution of metapaths


expand minigram to include anaphora

InstantiateTypeInModel - need to relativize InstantiateDepTypesInRec
to Model

Put FindEqualityConstraints == nil into Resolve rather than
FindDomain?

Put in a check in ResolveMetaPaths at end for GenderMutuallyExclusive
in NewRec.

Anaph resolution produces a large number of incorrect results for A
man owns a donkey. He likes it.  It likes him.

expand parser to compute truth

integrate tools.oz into interface

fishgram - lexical types appear not to be instantiable and therefore
the indexed lexicon is not compiling. meettype('Number'
sintype('Number' sg)) and similar is not simplifying

Problem with mapping SubstFun through meettype(...) in
EmbeddingFunConvert.  Maybe because the rule hasn't added agr to NP.
Need to implement HFC before this will work?

%***************** Error: illegal field selection ***************
%**
%** In statement: rectype(cat:sintype('Cat' np) daughters:rectype(first:meettype(rectype(,,,) rectype(,,,)) rest:rectype(first:meettype(,,,) rest:sintype(,,,))) id:sintype('Id' apply(apply(,,,) 'Fish')) phon:opsintype('Phon' append(,,,|,,, ,,,|,,,))) . agr = _<optimized>
%** In statement: {<P/3 Value.'.'> rectype(cat:sintype('Cat' np) daughters:rectype(first:meettype(rectype(,,,) rectype(,,,)) rest:rectype(first:meettype(,,,) rest:sintype(,,,))) id:sintype('Id' apply(apply(,,,) 'Fish')) phon:opsintype('Phon' append(,,,|,,, ,,,|,,,))) agr _}
%**
%** Call Stack:
%** procedure 'SubstFun' in file "/Users/cooper/oz/records/functions.oz", line 92, column 16, PC = 25597308
%** procedure 'MapT' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 76, column 3, PC = 3340512
%** procedure 'MapT' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 76, column 3, PC = 3340512
%** procedure 'Map' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 70, column 3, PC = 3339912
%** procedure 'MapT' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 76, column 3, PC = 3340512
%** procedure 'Map' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 70, column 3, PC = 3339912
%** procedure 'Map' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 70, column 3, PC = 3339912
%** procedure 'MapT' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/Record.oz", line 76, column 3, PC = 3340512
%** procedure 'EmbeddingFunConvert' in file "/Users/cooper/oz/records/functions.oz", line 88, column 3, PC = 25598940
%** procedure in file "/Users/cooper/oz/records/parse.oz", line 1050, column 7, PC = 5047892
%** procedure 'ForAll' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/List.oz", line 106, column 0, PC = 3250420
%** procedure 'ForAll' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/List.oz", line 106, column 0, PC = 3250420
%** procedure in file "/Users/cooper/oz/records/parse.oz", line 900, column 3, PC = 5043948
%** procedure 'ForAll' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/List.oz", line 106, column 0, PC = 3250420
%** procedure 'ForAll' in file "/home/kost/compile/build-1.3.0/updates/mozart/share/lib/base/List.oz", line 106, column 0, PC = 3250420
%** procedure 'AddInputToChart' in file "/Users/cooper/oz/records/parse.oz", line 887, column 3, PC = 5043300
%** procedure in file "/Users/cooper/oz/records/parse.oz", line 283, column 10, PC = 5030736
%** procedure 'QTkAction,execute' in file "/Users/maparent/Programmation/mozart-stdlib/wp/qtk/QTkDevel.oz", line 1290, column 6, PC = 17204252
%** procedure 'Listen' in file "/Users/maparent/Programmation/mozart-stdlib/wp/qtk/QTk.oz", line 223, column 8, PC = 5876804
%**--------------------------------------------------------------



    agreement features are merged in the mother node but not in the
    daughter nodes.  Need to change so that merging takes place in the
    daughter nodes and copying to the mother node depends on whether
    its an np or s rule.

Treat HFP using sintype on mother.

Implement merges result from equalities:
       using Records.substituteValInPath

Make InstantiateTypeInModel truly recursive for DepFunType1
